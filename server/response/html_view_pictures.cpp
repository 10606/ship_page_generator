#include "html_view_pictures.h"

std::string_view const html_view_pictures =
"<script>\n"
    "var picture_list = [];\n"
    "var picture_index = 0;\n"
    "function view_pictures (event)\n"
    "{\n"
        "if (event.shiftKey ||\n"
            "event.altKey ||\n"
            "event.ctrlKey)\n"
            "return;\n"
        "event.preventDefault();\n"
        "picture_list = [];\n"
        "picture_index = 0;\n"
        "let picture_li = [];\n"
        "let target = event.target;\n"
        "let tag_name = target.parentNode.tagName;\n"
        "if (tag_name == \"DIV\")\n"
            "picture_li = target.nextElementSibling.childNodes;\n"
        "if (tag_name == \"LI\")\n"
            "picture_li = target.parentNode.parentNode.childNodes;\n"
        "if (tag_name == \"A\")\n"
            "picture_li = target.parentNode.parentNode.parentNode.childNodes;\n"
        "let i = 0;\n"
        "for (picture of picture_li)\n"
        "{\n"
            "if (picture.tagName != \"LI\" || picture.childNodes.length < 3)\n"
                "continue;\n" // text that just new line, skip it
            "if (picture == target.parentNode ||\n"
                "picture == target.parentNode.parentNode)\n"
                "picture_index = i;\n"
            "let link = picture.childNodes[0];\n"
            "let description = String();\n"

            "for (let j = 0; j != picture.childNodes.length; ++j)\n"
                "if (picture.childNodes[j].tagName === undefined)\n"
                    "description += picture.childNodes[j].textContent;\n"
            
            "let picture_link = link.getAttribute(\"href\");"
            "picture_list.push({\n"
                "picture:     picture_link,\n"
                "description: description,\n"
            "});\n"
            "++i;\n"
        "}\n"
        "display_picture();\n"
        "let picture_viewer = document.getElementById(\"picture_viewer\");\n"
        "picture_viewer.style.display = \"flex\";\n"
        "document.addEventListener(\"keydown\", keyboard_control);\n"
        "document.addEventListener(\"touchstart\", touch_start);\n"
        "document.addEventListener(\"touchmove\", touch_move);\n"
        "document.addEventListener(\"touchend\", touch_end);\n"
    "}\n"
    
    "function display_picture ()\n"
    "{\n"
        "let image_src = \"\";\n"
        "let description = \"\";\n"
        "if (picture_list.length != 0)\n"
        "{\n"
            "image_src = picture_list[picture_index].picture;\n"
            "description = picture_list[picture_index].description;\n"
        "}\n"
        "let picture_view = document.getElementById(\"picture_view\");\n"
        "picture_view.setAttribute(\"src\", image_src);\n"
        "let picture_description = document.getElementById(\"picture_description\");\n"
        "picture_description.textContent = description;\n"
    "}\n"
    "function keyboard_control (event)\n"
    "{\n"
        "if (event.key === \"ArrowLeft\" || event.key === \"p\")\n"
        "{\n"
            "event.preventDefault();\n"
            "prev_picture();\n"
        "}\n"
        "else if (event.key === \"ArrowRight\" || event.key === \"n\")\n"
        "{\n"
            "event.preventDefault();\n"
            "next_picture();\n"
        "}\n"
        "else if (event.key === \"Escape\")\n"
            "clear_picture();\n"
    "}\n"
    "var touch_start_x;\n"
    "var touch_start_y;\n"
    "var touch_single;\n"
    "var touch_time;\n"
    "function touch_start (event)\n"
    "{\n"
        "let picture_viewer = document.getElementById(\"picture_viewer\");\n"
        "touch_start_x = event.changedTouches[0].clientX;\n"
        "touch_start_y = event.changedTouches[0].clientY;\n"
        "touch_single = event.changedTouches.length == 1 && touch_start_x >= picture_viewer.getBoundingClientRect().left;\n"
        "touch_time = event.timeStamp;\n"
    "}\n"
    "function touch_move (event)\n"
    "{\n"
        "touch_single &= event.changedTouches.length == 1;\n"
    "}\n"
    "function touch_end (event)\n"
    "{\n"
        "touch_single &= event.changedTouches.length == 1;\n"
        "if (!touch_single || event.timeStamp - touch_time > 500)\n"
            "return;\n"
        "let touch_end_x = event.changedTouches[0].clientX;\n"
        "let touch_end_y = event.changedTouches[0].clientY;\n"
        "if (Math.abs(touch_end_x - touch_start_x) > 2 * Math.abs(touch_end_y - touch_start_y))\n"
        "{\n"
            "if (touch_end_x - touch_start_x > 0)\n"
                "prev_picture();\n"
            "else\n"
                "next_picture();\n"
        "}\n"
    "}\n"
    "function next_picture ()\n"
    "{\n"
        "if (picture_list.length == 0)\n"
            "return;\n"
        "picture_index = (picture_index + 1) % picture_list.length;\n"
        "display_picture();\n"
    "}\n"
    "function prev_picture ()\n"
    "{\n"
        "if (picture_list.length == 0)\n"
            "return;\n"
        "picture_index = (picture_index + picture_list.length - 1) % picture_list.length;\n"
        "display_picture();\n"
    "}\n"
    "function clear_picture ()\n"
    "{\n"
        "picture_list = [];\n"
        "picture_index = 0;\n"
        "let picture_viewer = document.getElementById(\"picture_viewer\");\n"
        "document.removeEventListener(\"touchstart\", touch_start);\n"
        "document.removeEventListener(\"touchmove\", touch_move);\n"
        "document.removeEventListener(\"touchend\", touch_end);\n"
        "document.removeEventListener(\"keydown\", keyboard_control);\n"
        "picture_viewer.style.display = \"none\";\n"
        "display_picture();\n"
    "}\n"
"</script>\n"
"<style>\n"
    ".picture_viewer {\n"
        "position: fixed;\n"
        "left:   calc(230px + 10px);\n"
        "right:  0px;\n"
        "top:    0px;\n"
        "bottom: 0px;\n"
        "display: none;\n"
        "background-color: #f5f5f5;\n"
        "justify-content: center;\n"
        "align-items: center;\n"
        "min-width: 200px;\n"
        "min-height: 200px;\n"
    "}\n"
    ".picture_viewer img {\n"
        "max-width: calc(100% - 10px - 67px);\n"
        "max-height: calc(100% - 140px);\n"
    "}\n"
    ".picture_viewer p {\n"
        "font-size: 20px;\n"
        "position: fixed;\n"
        "bottom: 20px;\n"
    "}\n"
    ".picture_viewer button {\n"
        "position: fixed;\n"
        "text-shadow: 1px 0px 3px white, -1px 0px 3px white, 0px 1px 3px white, 0px -1px 3px white;\n"
        "font-size: 30px;\n"
        "background-color: transparent;\n"
        "border: none;\n"
        "cursor: pointer;\n"
    "}\n"
    ".picture_viewer button:hover {\n"
        "color: #ff5555;\n"
    "}\n"
    ".close_button {\n"
        "right: 3px;\n"
        "top: 3px;\n"
    "}\n"
    ".prev_button {\n"
        "left: calc(230px + 10px + 3px);\n"
        "top: calc(50% - 75px);\n"
        "min-height: 150px;\n"
    "}\n"
    ".next_button {\n"
        "right: 3px;\n"
        "top: calc(50% - 75px);\n"
        "min-height: 150px;\n"
    "}\n"
    ".view_pictures {\n"
        "background-color: #777777;\n"
        "color: white;\n"
        "padding: 6px;\n"
        "border: none;\n"
        "outline: none;\n"
        "cursor: pointer;\n"
    "}\n"
    "li .view_pictures {\n"
        "margin: 0 auto;\n"
        "display: table;\n"
        "width: 100%;\n"
        "text-align: center;\n"
    "}\n"
    ".view_pictures:hover { background-color: #ff5555; }\n"
    ".view_pictures:focus { background-color: #6666ff; }\n"
"</style>\n"
"<div id=picture_viewer class=picture_viewer>\n"
    "<img src=\"\" id=picture_view>\n"
    "<button class=close_button onclick=clear_picture(event)> x </button>\n"
    "<p id=picture_description> </p>\n"
    "<button class=prev_button onclick=prev_picture(event)> < </button>\n"
    "<button class=next_button onclick=next_picture(event)> > </button>\n"
"</div>\n";


